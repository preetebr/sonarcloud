name: Test Sonar

on:
  push:

jobs:
  analyze:
    name: CodeQL
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'java' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    - name: Perform CodeQL Analysis

      uses: github/codeql-action/analyze@v2

  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: mvn test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.11.0

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/

  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.qualitygate.wait=true -Dsonar.projectKey=${{ secrets.SONAR_ID }}

  build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Package
      run: mvn package

  Deploy-DEV:
    runs-on: ubuntu-latest
    needs: build
    environment:

      name: dev
    if: github.ref == 'refs/heads/develop'
    steps:

      - name: Deploy
        shell: bash
        run: |
          echo "Deploy DEV"

  Smoketest-DEV:
    runs-on: ubuntu-latest
    needs: Deploy-DEV

    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'

  Teste-DEV:
    runs-on: ubuntu-latest
    needs: Smoketest-DEV

    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/testeIntegrado.sh'

  Deploy-HML:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/homolog'
    environment:
      name: hml
    needs: build
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy HML"

  Smoketest_HML:
    runs-on: ubuntu-latest
    needs: Deploy-HML

    if: github.ref == 'refs/heads/homolog'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'

  Teste-HML:
    runs-on: ubuntu-latest
    needs: Smoketest_HML

    if: github.ref == 'refs/heads/homolog'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/testesFuncionais.sh'

  Deploy-PRD:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prd
    needs: build
    steps:

      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy PRD" 